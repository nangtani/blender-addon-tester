name: test-fake-addon-example-from-local-wheel

on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        blender-version: ["4.5", "4.4", "4.3", "3.6", "3.3"]
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest, windows-latest]
    env:
      BLENDER_CACHE: ${{ github.workspace }}/.blender_releases_cache # The place where blender releases are downloaded
      BLENDER_VERSION: ${{ matrix.blender-version }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Cache Blender release download
      uses: actions/cache@v4
      with:
        path: ${{ env.BLENDER_CACHE }}
        key: ${{ matrix.os }}-blender-${{ matrix.blender-version }}
    - name: Setup Environment
      run: |
        # This testing script will make use of BLENDER_VERSION and BLENDER_CACHE
        bash rebuild_pipreinstall_and_testexamples.sh
        cd examples/testing-fake-addon/
    - name: Download and Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}}
      run: |
        cd examples/testing-fake-addon/
        pwd
        python test_addon_blender.py fake_addon ${{ matrix.blender-version }}
    - name: Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}} Advanced
      run: |
        cd examples/testing-fake-addon/
        python test_addon_blender_advanced.py fake_addon ${{ matrix.blender-version }}
    - name: Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}} Prezipped Addon
      run: |
        cd examples/testing-fake-addon/
        python test_addon_blender_prezipped_addon.py fake_addon ${{ matrix.blender-version }}
    - name: Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}} built in addon
      run: |
        cd examples/testing-io_scene_obj/
        python test_addon_blender.py io_scene_obj ${{ matrix.blender-version }}
    - name: Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}} built in addon file
      run: |
        cd examples/testing-io_scene_obj/
        python test_addon_blender.py io_import_images_as_planes.py ${{ matrix.blender-version }}
    - if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
      name: Download and Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}} with absolute paths | Unix
      run: |
        test_dir=$(pwd)/examples/testing-fake-addon
        cd $(dirname $(mktemp -u))
        python $test_dir/test_addon_blender.py $test_dir/fake_addon ${{ matrix.blender-version }}
    - if: ${{ matrix.os == 'windows-latest' }}
      name: Download and Test Blender ${{ matrix.blender-version }} x ${{ matrix.os}} with absolute paths | Windows
      run: |
        $test_dir="$pwd/examples/testing-fake-addon"
        cd $env:TEMP
        python "$test_dir/test_addon_blender.py" "$test_dir/fake_addon" ${{ matrix.blender-version }}
    - name: Expose coverage as a CI download # Related to test_fake_addon_blender_advanced.py
      uses: actions/upload-artifact@v4
      with:
        name: coverage.xml
        path: examples/testing-fake-addon/coverage.xml

  pypy_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Make PyPi dist release
        run: |
          pip install -r requirements.txt
          make dist
      - name: Publish Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}  
